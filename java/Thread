1).interrupt==>interrupt status set true
1.wait,join,sleep method invoke,then its interrupt status will be cleared and it will receive an InterruptedException.
2.I/O operation,then the channel will be closed, the thread's interrupt status will be set, receive an ClosedByInterruptException.
3.Selector,the thread's interrupt status will be set，then return a non-zero value
4.none of the previous conditions hold then this thread's interrupt status will be set.Interrupting a thread that is not alive need not have any effect.

PS:Lock.lock和Synchronized 这种 blocked不受影响，而Lock.lock(long),Lock.lockInterruptibly,tryLock(long time, TimeUnit unit)这个受影响。


2).interrupted() 和isInterrupted()
这个方法都查看interrupt flag的值，而interrupted() 会将interrupt status will be cleared


3)LockSupport.unpark|park
unpark函数为线程提供“许可(permit)”，线程调用park函数则等待“许可”。这个有点像信号量，但是这个“许可”是不能叠加的，“许可”是一次性的。
比如线程B连续调用了三次unpark函数，当线程A调用park函数就使用掉这个“许可”，如果线程A再次调用park，则进入等待状态。
ps,unpark函数可以先于park调用。比如线程B调用unpark函数，给线程A发了一个“许可”，那么当线程A调用park时，它发现已经有“许可”了，那么它会马上再继续运行。 
没有异常，也不会清除interrupt status