curator-x-discovery
通过临时节点拓展
UriSpec uriSpec = new UriSpec("{scheme}://foo.com:{port}");
thisInstance = ServiceInstance.<InstanceDetails> builder().name(serviceName).payload(new InstanceDetails(description))
                .port((int) (65535 * Math.random())) // in a real application,
                                                        // you'd use a common
                                                        // port
                .uriSpec(uriSpec).build();
// if you mark your payload class with @JsonRootName the provided
// JsonInstanceSerializer will work
JsonInstanceSerializer<InstanceDetails> serializer = new JsonInstanceSerializer<InstanceDetails>(InstanceDetails.class);
serviceDiscovery = ServiceDiscoveryBuilder.builder(InstanceDetails.class).client(client).basePath(path).serializer(serializer)
                .thisInstance(thisInstance).build();

//查看
 public ServiceInstance<InstanceDetails> getThisInstance() {
        return thisInstance;
    }
//增加
    public void start() throws Exception {
        serviceDiscovery.start();
    }
//删除
    @Override
    public void close() throws IOException {
        CloseableUtils.closeQuietly(serviceDiscovery);
    }