 Leader选举
 1)leader选举
 LeaderLatch example = new LeaderLatch(client, PATH, "Client #" + i);
 example.start();
 example.hasLeadership()==>被选了

 example.close()==>下岗

 example.await(2, TimeUnit.SECONDS);==>获取上岗，不一定会成功

 2)LeaderSelector
 leaderSelector = new LeaderSelector(client, path, LeaderSelectorListenerAdapter);
 leaderSelector.autoRequeue();

 ps:
 1.通过LeaderSelectorListener可以对领导权进行控制， 在适当的时候释放领导权，
 这样每个节点都有可能获得领导权。 而LeaderLatch一根筋到死， 除非调用close方法，否则它不会释放领导权
 2.推荐处理方式是当收到SUSPENDED 或 LOST时抛出CancelLeadershipException异常.
 这会导致LeaderSelector实例中断并取消执行takeLeadership方法的异常. 这非常重要
